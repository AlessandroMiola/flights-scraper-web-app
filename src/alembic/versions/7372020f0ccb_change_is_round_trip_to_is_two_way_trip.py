"""change is_round_trip to is_two_way_trip

Revision ID: 7372020f0ccb
Revises: ab7136c2bb1a
Create Date: 2023-09-13 16:07:35.111531

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7372020f0ccb"
down_revision: str | None = "ab7136c2bb1a"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("flights", sa.Column("is_two_way_trip", sa.Boolean(), nullable=False))
    op.drop_column("flights", "is_round_trip")
    op.add_column("parameters", sa.Column("is_two_way_trip", sa.Boolean(), nullable=True))
    params = sa.table("parameters", sa.Column("is_two_way_trip"), sa.Column("is_round_trip"))
    op.execute(params.update().values(is_two_way_trip=params.c.is_round_trip))
    op.alter_column("parameters", "is_two_way_trip", nullable=False)
    op.drop_column("parameters", "is_round_trip")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "parameters", sa.Column("is_round_trip", sa.Boolean(), autoincrement=False, nullable=False)
    )
    op.drop_column("parameters", "is_two_way_trip")
    op.add_column(
        "flights", sa.Column("is_round_trip", sa.Boolean(), autoincrement=False, nullable=False)
    )
    op.drop_column("flights", "is_two_way_trip")
    # ### end Alembic commands ###
